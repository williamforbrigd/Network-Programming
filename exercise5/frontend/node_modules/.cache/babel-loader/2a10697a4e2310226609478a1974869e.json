{"ast":null,"code":"var _jsxFileName = \"/Users/williamforbrigd/OneDrive - NTNU/4 Dataingeni\\xF8r/Nettverksprogrammering/\\xD8vinger/exercise5/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { Button, Paper, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateAreas: \"'text1 text2'\",\n    alignContent: 'center',\n    backgroundColor: '#1b1b2d',\n    gridGap: 5,\n    padding: 28,\n    margin: '55px 25px 0px 25px'\n  },\n  inputField: {\n    gridArea: \"text1\",\n    backgroundColor: \"#131924\"\n  },\n  input: {\n    color: \"white\"\n  },\n  outputField: {\n    backgroundColor: \"#131924\",\n    padding: 25,\n    gridArea: \"text2\",\n    color: 'white',\n    whiteSpace: 'pre-line'\n  },\n  btn: {\n    color: 'white',\n    backgroundColor: \"#131924\",\n    '&:hover': {\n      backgroundColor: '#13171E'\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [code, setCode] = useState('#include <iostream> \\n int main(){\\n std::cout<<\"hello\";\\n}');\n  const [ans, setAns] = useState('');\n\n  const compile = () => {\n    setAns(\"Compiling...\");\n    axios.post('http://localhost:9090/compile/', {\n      code: code\n    }).then(response => {\n      setAns(response.data.ans);\n    }).catch(error => {\n      setAns(\"Something wrong happend\");\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      InputProps: {\n        className: classes.input\n      },\n      variant: \"outlined\",\n      multiline: true,\n      className: classes.inputField,\n      value: code,\n      onChange: e => setCode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.outputField,\n      children: ans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      className: classes.btn,\n      onClick: compile,\n      children: \"Compile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"lu0SpZiTMqGU0MmOEvsohnCMvUQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App; //import React, { useState } from 'react';\n//import './App.css';\n//import { TextareaAutosize, Button } from '@material-ui/core';\n//\n//function App() {\n//const [code, setCode ] = useState(\"#include <iostream> int main() {std::cout<<\\\"yoyoyyoyo\\\"<<std::endl;}\");\n//const [output, setOutput] = useState(\"\");\n//\n//const postRequest = async() => {\n//  const requestOptions = {\n//          method: 'POST',\n//          headers: { 'Content-Type' : 'application/json'},\n//          body: JSON.stringify(code)\n//  };\n//  fetch(\"http://localhost:8080/docker\", requestOptions)\n//    //.then(response => response.json())\n//    .then(result => {\n//      setOutput(result);\n//    });\n//};\n//\n//const handleInput = (e) => {\n//  setCode(e.target.value);\n//  console.log(e.target.value);\n//};\n//\n//return (\n//  <div>\n//    <h3>Enter the c++ code:</h3>\n//    <TextareaAutosize \n//      rowsMin={10}\n//      text={code}\n//      onInput={handleInput}\n//    />\n//    <Button onClick={postRequest}>\n//      Compile and Run\n//    </Button>\n//    <h3>\n//      The output is: {output}\n//    </h3>\n//  </div>\n//  );\n//}\n//\n//export default App;\n//\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/williamforbrigd/OneDrive - NTNU/4 Dataingeniør/Nettverksprogrammering/Øvinger/exercise5/frontend/src/App.js"],"names":["axios","useState","Button","Paper","TextField","Typography","makeStyles","useStyles","root","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","alignContent","backgroundColor","gridGap","padding","margin","inputField","gridArea","input","color","outputField","whiteSpace","btn","App","classes","code","setCode","ans","setAns","compile","post","then","response","data","catch","error","console","log","className","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {useState} from 'react'\nimport { Button, Paper ,TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root:{\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateAreas:\"'text1 text2'\",\n    alignContent: 'center',\n    backgroundColor: '#1b1b2d',\n    gridGap: 5,\n    padding: 28,\n    margin: '55px 25px 0px 25px',\n  },\n  inputField: {\n    gridArea: \"text1\",\n    backgroundColor: \"#131924\",\n  },\n  input: {\n    color: \"white\"\n  },\n  outputField: {\n    backgroundColor: \"#131924\",\n    padding: 25,\n    gridArea: \"text2\",\n    color:'white',\n    whiteSpace: 'pre-line',\n  },\n  btn:{\n    color:'white',\n    backgroundColor: \"#131924\",\n    '&:hover': {\n      backgroundColor: '#13171E'\n  }\n  }\n});\n\n\n\nfunction App() {\n  const classes = useStyles();\n  const [code ,setCode] = useState('#include <iostream> \\n int main(){\\n std::cout<<\"hello\";\\n}')\n  const [ans, setAns] = useState('')\n\n  const compile = () => {\n    setAns(\"Compiling...\")\n    axios.post('http://localhost:9090/compile/', {\n      code: code\n    })\n    .then((response) => {\n      setAns(response.data.ans);\n    })\n    .catch((error) => {\n      setAns(\"Something wrong happend\");\n      console.log(error);\n    });\n  };\n return(\n   <Paper className={classes.root}>\n     <TextField  InputProps={{className: classes.input}} variant=\"outlined\" multiline className={classes.inputField} value={code} onChange={(e) => setCode(e.target.value)}></TextField >\n     <Typography className={classes.outputField}>{ans}</Typography>\n     <Button variant=\"outlined\" className={classes.btn} onClick={compile}>Compile</Button>\n   </Paper>\n )\n}\n\nexport default App;\n//import React, { useState } from 'react';\n//import './App.css';\n//import { TextareaAutosize, Button } from '@material-ui/core';\n//\n//function App() {\n//const [code, setCode ] = useState(\"#include <iostream> int main() {std::cout<<\\\"yoyoyyoyo\\\"<<std::endl;}\");\n//const [output, setOutput] = useState(\"\");\n//\n//const postRequest = async() => {\n//  const requestOptions = {\n//          method: 'POST',\n//          headers: { 'Content-Type' : 'application/json'},\n//          body: JSON.stringify(code)\n//  };\n//  fetch(\"http://localhost:8080/docker\", requestOptions)\n//    //.then(response => response.json())\n//    .then(result => {\n//      setOutput(result);\n//    });\n//};\n//\n//const handleInput = (e) => {\n//  setCode(e.target.value);\n//  console.log(e.target.value);\n//};\n//\n//return (\n//  <div>\n//    <h3>Enter the c++ code:</h3>\n//    <TextareaAutosize \n//      rowsMin={10}\n//      text={code}\n//      onInput={handleInput}\n//    />\n//    <Button onClick={postRequest}>\n//      Compile and Run\n//    </Button>\n//    <h3>\n//      The output is: {output}\n//    </h3>\n//  </div>\n//  );\n//}\n//\n//export default App;\n//"]},"metadata":{},"sourceType":"module"}